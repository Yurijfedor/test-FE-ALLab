{"version":3,"file":"static/js/396.fcf57c62.chunk.js","mappings":"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","sources":["components/container.tsx","components/isFavorite.tsx","components/posted.tsx","components/applayButton.tsx","components/isFavoriteMobile.tsx","components/headerDetail.tsx","components/description.tsx","components/infoJobItem.tsx","components/additInfo.tsx","components/currentLocationMarker.tsx","components/map.tsx","components/themeMaps.ts","components/mapInfo.tsx","components/attImages.tsx","pages/JobDetail.tsx","redux/hooks.ts"],"sourcesContent":["export const Container: React.FC<any> = ({ children }) => {\r\n  return (\r\n    <div className=\"container mx-auto 2xl:flex 2xl:justify-center \">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import { BsFillBookmarkFill } from \"react-icons/bs\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../redux/hooks\";\r\nimport { toggleFavorite } from \"../redux/jobFavoriteSlice\";\r\n\r\ninterface IProps {\r\n  id: string;\r\n}\r\n\r\nexport const IsFavorite: React.FC<IProps> = ({ id }) => {\r\n  const dispatch = useAppDispatch();\r\n  const isFavorite = useAppSelector((state) => state.isFavorite);\r\n\r\n  const toggleIsFavoriteState: React.MouseEventHandler<SVGElement> = (e) => {\r\n    dispatch(toggleFavorite(id));\r\n  };\r\n\r\n  const FavoriteState = isFavorite.find(\r\n    (item) => item.id === id && item.isFavorite === true\r\n  );\r\n\r\n  return FavoriteState?.isFavorite === true ? (\r\n    <BsFillBookmarkFill\r\n      fill=\"yellow\"\r\n      stroke=\"#70778B\"\r\n      strokeWidth=\"1px\"\r\n      onClick={toggleIsFavoriteState}\r\n    />\r\n  ) : (\r\n    <BsFillBookmarkFill\r\n      fill=\"white\"\r\n      stroke=\"#70778B\"\r\n      strokeWidth=\"1px\"\r\n      onClick={toggleIsFavoriteState}\r\n    />\r\n  );\r\n};\r\n","interface IProps {\r\n  createdAt: string;\r\n}\r\nexport const PostedAt: React.FC<IProps> = ({ createdAt }) => {\r\n  const date = createdAt;\r\n  const currentDate = Date.parse(new Date().toString());\r\n  const days = (currentDate - Date.parse(date)) / 86400000;\r\n\r\n  return (\r\n    <p className=\"2xl:font-postedAt font-light text-lg tracking-[-0.5625px] text-postedAt text-[14px] leading-[17px] mb-[7px]\">{`Posted ${Math.round(\r\n      days\r\n    )} days ago`}</p>\r\n  );\r\n};\r\n","interface IProps {\r\n  email: string;\r\n}\r\nexport const Applaybutton: React.FC<IProps> = ({ email }) => {\r\n  return (\r\n    <a\r\n      className=\"mx-auto 2xl:mx-0 w-127 h-52 bg-apply-button flex justify-center items-center text-white-accent rounded-lg text-applayButton uppercase font-semibold mb-[32px]\"\r\n      href={`mailto:${email}`}\r\n    >\r\n      Apply now\r\n    </a>\r\n  );\r\n};\r\n","import { FaStar } from \"react-icons/fa\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../redux/hooks\";\r\nimport { toggleFavorite } from \"../redux/jobFavoriteSlice\";\r\n\r\ninterface IProps {\r\n  id: string;\r\n}\r\n\r\nexport const IsFavoriteMobile: React.FC<IProps> = ({ id }) => {\r\n  const dispatch = useAppDispatch();\r\n  const isFavorite = useAppSelector((state) => state.isFavorite);\r\n\r\n  const toggleIsFavoriteState: React.MouseEventHandler<SVGElement> = (e) => {\r\n    dispatch(toggleFavorite(id));\r\n  };\r\n\r\n  const FavoriteState = isFavorite.find(\r\n    (item) => item.id === id && item.isFavorite === true\r\n  );\r\n\r\n  return FavoriteState?.isFavorite === true ? (\r\n    <FaStar\r\n      fill=\"yellow\"\r\n      stroke=\"#70778B\"\r\n      strokeWidth=\"50px\"\r\n      onClick={toggleIsFavoriteState}\r\n    />\r\n  ) : (\r\n    <FaStar\r\n      fill=\"white\"\r\n      stroke=\"#70778B\"\r\n      strokeWidth=\"50px\"\r\n      onClick={toggleIsFavoriteState}\r\n    />\r\n  );\r\n};\r\n","import { IsFavorite } from \"../components/isFavorite\";\r\n\r\nimport { BsFillShareFill } from \"react-icons/bs\";\r\nimport {\r\n  EmailShareButton,\r\n  EmailIcon,\r\n  FacebookShareButton,\r\n  FacebookIcon,\r\n  InstapaperShareButton,\r\n  InstapaperIcon,\r\n  LinkedinShareButton,\r\n  LinkedinIcon,\r\n  TelegramShareButton,\r\n  TelegramIcon,\r\n  TwitterShareButton,\r\n  TwitterIcon,\r\n  ViberShareButton,\r\n  ViberIcon,\r\n  WhatsappShareButton,\r\n  WhatsappIcon,\r\n} from \"react-share\";\r\nimport { IsFavoriteMobile } from \"./isFavoriteMobile\";\r\n\r\ninterface IProps {\r\n  id: string;\r\n  width: number;\r\n}\r\nexport const Header: React.FC<IProps> = ({ id, width }) => {\r\n  const shareList = document.querySelector(\"#share\");\r\n  const onRemoveHidden = () => {\r\n    shareList?.classList.remove(\"hidden\");\r\n  };\r\n  const onAddHidden = () => {\r\n    shareList?.classList.add(\"hidden\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"2xl:flex 2xl:justify-between text-text-accent mb-[9px] \">\r\n      <h2 className=\"font-bold text-logo\">Job Details</h2>\r\n      <div className=\"2xl:hidden mt-[12px] mb-[24px] w-full h-[1px] bg-text-accent opacity-[0.13] mix-blend-normal\"></div>\r\n      <div className=\"flex gap-6\">\r\n        <p className=\"text-p2 text-lg flex items-center gap-2 cursor-pointer \">\r\n          {width > 1920 ? <IsFavorite id={id} /> : <IsFavoriteMobile id={id} />}\r\n          Save to my list\r\n        </p>\r\n\r\n        <p\r\n          className=\"relative flex items-center gap-2 cursor-pointer text-p2 text-lg hover:text-black\"\r\n          onClick={onRemoveHidden}\r\n        >\r\n          <BsFillShareFill fill=\"#70778B\" />\r\n          Share\r\n        </p>\r\n        <div\r\n          id=\"share\"\r\n          className=\"hidden absolute top-[100px] 2xl:top-[50px]\"\r\n          onClick={onAddHidden}\r\n        >\r\n          <EmailShareButton url=\"shareUrl\">\r\n            <EmailIcon size={40} round={true} />\r\n          </EmailShareButton>\r\n          <FacebookShareButton url=\"shareUrl\">\r\n            <FacebookIcon size={40} round={true} />\r\n          </FacebookShareButton>\r\n          <InstapaperShareButton url=\"shareUrl\">\r\n            <InstapaperIcon size={40} round={true} />\r\n          </InstapaperShareButton>\r\n          <LinkedinShareButton url=\"shareUrl\">\r\n            <LinkedinIcon size={40} round={true} />\r\n          </LinkedinShareButton>\r\n          <TelegramShareButton url=\"shareUrl\">\r\n            <TelegramIcon size={40} round={true} />\r\n          </TelegramShareButton>\r\n          <TwitterShareButton url=\"shareUrl\">\r\n            <TwitterIcon size={40} round={true} />\r\n          </TwitterShareButton>\r\n          <ViberShareButton url=\"shareUrl\">\r\n            <ViberIcon size={40} round={true} />\r\n          </ViberShareButton>\r\n          <WhatsappShareButton url=\"shareUrl\">\r\n            <WhatsappIcon size={40} round={true} />\r\n          </WhatsappShareButton>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","/* eslint-disable no-useless-concat */\r\nimport { PostedAt } from \"../components/posted\";\r\ninterface IProps {\r\n  title: string;\r\n  salary: string;\r\n  postedDate: string;\r\n  description: string;\r\n}\r\nexport const Description: React.FC<IProps> = ({\r\n  title,\r\n  salary,\r\n  postedDate,\r\n  description,\r\n}) => {\r\n  const getSalary = (stringValue: string) => {\r\n    const convertedSalary: number[] = [];\r\n    stringValue.split(\"-\").forEach((element) => {\r\n      convertedSalary.push(parseInt(element) * 1000);\r\n    });\r\n    return convertedSalary.join(String.fromCharCode(8212));\r\n  };\r\n  return (\r\n    // className=\"2xl:flex text-text-accent gap-[60px] mb-[7px]\"\r\n    // <div className=\"flex justify-between items-center text-text-accent\"></div>\r\n    <>\r\n      <div className=\"2xl:flex 2xl:columns-2 justify-between\">\r\n        <div className=\"\">\r\n          <h2 className=\"max-w-[501px] text-h2 text-text-accent font-bold tracking-[-0.75px]\">\r\n            {title}\r\n          </h2>\r\n        </div>\r\n\r\n        <div className=\" 2xl:flex flex-col-reverse justify-end mt-[5px] mb-[14px] text-text-accent\">\r\n          <p className=\"font-postedAt text-lg font-normal tracking-[-0.5625px] text-right\">\r\n            Brutto, per year\r\n          </p>\r\n          <p className=\"text-salary tracking-[-0.625px] text-right\">\r\n            {String.fromCharCode(8364) + \" \" + `${getSalary(salary)}`}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <PostedAt createdAt={postedDate} />\r\n\r\n      <p className=\"font-postedAt font-normal text-lg tracking-[-0.5625px] text-text-accent mb-[32px]\">\r\n        {description}\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n","interface IProps {\r\n  item: string;\r\n  isBenefits: boolean;\r\n}\r\n\r\nconst benefitsStyle = \"bg-benefitsBg text-[#988B49]\";\r\nconst employmentStyle = \"bg-employmentItemBg text-[#55699E]\";\r\n\r\nexport const InfoItem: React.FC<IProps> = ({ item, isBenefits }) => {\r\n  return (\r\n    <li\r\n      className={`flex justify-center items-center w-[222px] h-[49px] ${\r\n        isBenefits ? benefitsStyle : employmentStyle\r\n      } text-[16px] leading-4 tracking-[-0.457143px]  border border-solid border-[rgba(85, 105, 158, 0.3)] rounded-lg`}\r\n    >\r\n      {item}\r\n    </li>\r\n  );\r\n};\r\n","import { InfoItem } from \"./infoJobItem\";\r\ninterface IProps {\r\n  employmentType: string[];\r\n  benefits: string[];\r\n}\r\nexport const AdditInfo: React.FC<IProps> = ({ employmentType, benefits }) => {\r\n  return (\r\n    <div className=\"order-2 2xl:order-1\">\r\n      <h2 className=\" text-logo font-bold tracking-0.413333px text-text-accent w-full mb-[9px]\">\r\n        Additional info\r\n      </h2>\r\n      <div className=\"w-full h-[1px] bg-text-accent opacity-[0.13] mix-blend-normal mb-[15px]\"></div>\r\n      <h3 className=\"font-postedAt font-normal text-lg tracking-[-0.5625px] text-text-accent mb-[10px]\">\r\n        Employment type\r\n      </h3>\r\n      <ul className=\"flex gap-[8px] mb-[23px]\">\r\n        {employmentType.map((el: string) => {\r\n          return <InfoItem key={el} item={el} isBenefits={false} />;\r\n        })}\r\n      </ul>\r\n      <h3 className=\"font-postedAt font-normal text-lg tracking-[-0.5625px] text-text-accent mb-[10px]\">\r\n        Benefits\r\n      </h3>\r\n      <ul className=\"flex gap-[8px] mb-[83px]\">\r\n        {benefits.map((el: string) => {\r\n          return <InfoItem key={el} item={el} isBenefits={true} />;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import { Marker } from \"@react-google-maps/api\";\r\nimport { url } from \"inspector\";\r\nimport { ImLocation } from \"react-icons/im\";\r\n\r\ninterface IProps {\r\n  position: {\r\n    lat: number;\r\n    lng: number;\r\n  };\r\n}\r\n\r\nexport const CurrentLocationMarker: React.FC<IProps> = ({ position }) => {\r\n  return (\r\n    <Marker\r\n      position={position}\r\n      icon={\r\n        \"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\"\r\n      }\r\n    />\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useRef } from \"react\";\r\nimport { GoogleMap, Marker } from \"@react-google-maps/api\";\r\nimport { DefaultTheme } from \"./themeMaps\";\r\nimport { CurrentLocationMarker } from \"./currentLocationMarker\";\r\n\r\nconst containerStyle = {\r\n  width: \"400px\",\r\n  height: \"218px\",\r\n};\r\n\r\ninterface IProps {\r\n  lat: number;\r\n  long: number;\r\n}\r\n\r\nconst defaultOptions = {\r\n  styles: DefaultTheme,\r\n  panControl: false,\r\n  zoomControl: false,\r\n  mapTypeControl: false,\r\n  scaleControl: false,\r\n  rotateControl: false,\r\n  fullscreenControl: false,\r\n  scrollwheel: false,\r\n  streetViewControl: false,\r\n};\r\n\r\nexport const Map: React.FC<IProps> = ({ lat, long }) => {\r\n  const mapRef = useRef(undefined);\r\n\r\n  const center = {\r\n    lat: lat,\r\n    lng: long,\r\n  };\r\n\r\n  const onLoad = React.useCallback(function callback(map: any) {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  const onUnmount = React.useCallback(function callback(map: any) {\r\n    mapRef.current = undefined;\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={5}\r\n        onLoad={onLoad}\r\n        onUnmount={onUnmount}\r\n        options={defaultOptions}\r\n      >\r\n        <CurrentLocationMarker position={center} />\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n};\r\nfunction setMap(map: { fitBounds: (arg0: google.maps.LatLngBounds) => void }) {\r\n  throw new Error(\"Function not implemented.\");\r\n}\r\n","export const DefaultTheme = [\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#202c3e\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        gamma: 0.01,\r\n      },\r\n      {\r\n        lightness: 20,\r\n      },\r\n      {\r\n        weight: \"1.39\",\r\n      },\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        weight: \"0.96\",\r\n      },\r\n      {\r\n        saturation: \"9\",\r\n      },\r\n      {\r\n        visibility: \"on\",\r\n      },\r\n      {\r\n        color: \"#000000\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"labels.icon\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        lightness: 30,\r\n      },\r\n      {\r\n        saturation: \"9\",\r\n      },\r\n      {\r\n        color: \"#29446b\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        saturation: 20,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi.park\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        lightness: 20,\r\n      },\r\n      {\r\n        saturation: -20,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        lightness: 10,\r\n      },\r\n      {\r\n        saturation: -30,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#193a55\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"geometry.stroke\",\r\n    stylers: [\r\n      {\r\n        saturation: 25,\r\n      },\r\n      {\r\n        lightness: 25,\r\n      },\r\n      {\r\n        weight: \"0.01\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        lightness: -20,\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import { ImLocation } from \"react-icons/im\";\r\n\r\ninterface IProps {\r\n  text: string;\r\n  location?: boolean;\r\n  isName?: boolean;\r\n}\r\n\r\nconst contactInfoStyle =\r\n  \"font-postedAt font-normal text-lg tracking-[-0.5625px]\";\r\n\r\nexport const MapInfo: React.FC<IProps> = ({ text, location, isName }) => {\r\n  return (\r\n    <>\r\n      {location ? (\r\n        <div className=\"flex relative z-10 gap-1 items-center \">\r\n          <ImLocation fill=\"rgba(255, 255, 255, 0.669635)\" />\r\n          <p\r\n            className={`text-white-accent text-xl font-bold ${\r\n              !isName && contactInfoStyle\r\n            }`}\r\n          >\r\n            {isName && \"Department name: \"}\r\n            {text}\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <p\r\n          className={`relative text-xl font-bold text-white-accent  z-10 ${\r\n            !isName && contactInfoStyle\r\n          }`}\r\n        >\r\n          {isName && \"Department name: \"}\r\n          {text}\r\n        </p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","interface IProps {\r\n  pictures: string[];\r\n  name: string;\r\n}\r\n\r\nexport const AttImages: React.FC<IProps> = ({ pictures, name }) => {\r\n  return (\r\n    <div className=\"order-1 2xl:order-2\">\r\n      <h3 className=\" text-logo font-bold tracking-0.413333px text-text-accent w-full mb-[9px]\">\r\n        Attached images\r\n      </h3>\r\n      <div className=\"w-full h-[1px] bg-text-accent opacity-[0.13] mix-blend-normal mb-[21px]\"></div>\r\n\r\n      <ul className=\"flex gap-[10px]\">\r\n        {pictures.map((el: string, i: React.Key | null | undefined) => {\r\n          return (\r\n            <li\r\n              key={i}\r\n              className=\"w-[209px] bg-#25f5 overflow-hidden bg-cover \"\r\n            >\r\n              <img src={el} alt={name} className=\"rounded-lg \" />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable no-useless-concat */\r\nimport React from \"react\";\r\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useJsApiLoader } from \"@react-google-maps/api\";\r\n\r\nimport { useAppSelector } from \"../redux/hooks\";\r\nimport { Applaybutton } from \"../components/applayButton\";\r\nimport { Header } from \"../components/headerDetail\";\r\nimport { Description } from \"../components/description\";\r\nimport { AdditInfo } from \"../components/additInfo\";\r\nimport { FiChevronLeft } from \"react-icons/fi\";\r\nimport { Map } from \"../components/map\";\r\nimport { Container } from \"../components/container\";\r\nimport { MapInfo } from \"../components/mapInfo\";\r\nimport { AttImages } from \"../components/attImages\";\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst JobDetail: React.FC = () => {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: API_KEY,\r\n  });\r\n\r\n  const { jobsList } = useAppSelector((state) => state.jobs);\r\n  const { jobBoardId } = useParams();\r\n  const locationUrl = useLocation();\r\n  const navigate = useNavigate();\r\n  const jobItem: any = jobsList.find(({ id }) => id === jobBoardId);\r\n\r\n  const availableScreenWidth = window.screen.availWidth;\r\n\r\n  const handleClick = () => {\r\n    navigate(locationUrl?.state?.from ?? \"/\");\r\n  };\r\n\r\n  const {\r\n    email,\r\n    id,\r\n    title,\r\n    salary,\r\n    createdAt,\r\n    description,\r\n    employment_type,\r\n    benefits,\r\n    pictures,\r\n    location,\r\n    name,\r\n    address,\r\n    phone,\r\n  } = jobItem;\r\n  return (\r\n    <Container>\r\n      <section className=\"max-w-[774px] bg-white-accent\">\r\n        <Header id={id} width={availableScreenWidth} />\r\n        <div className=\"sm:hidden 2xl:flex w-full h-[1px] bg-text-accent opacity-[0.13] mix-blend-normal\"></div>\r\n        <section className=\"pt-[39px] pb-[135px]\">\r\n          {availableScreenWidth > 1920 && <Applaybutton email={email} />}\r\n\r\n          <Description\r\n            title={title}\r\n            salary={salary}\r\n            postedDate={createdAt}\r\n            description={description}\r\n          />\r\n          <Applaybutton email={email} />\r\n        </section>\r\n        <section className=\"flex flex-col gap-[63px]\">\r\n          <AttImages pictures={pictures} name={name} />\r\n          <AdditInfo employmentType={employment_type} benefits={benefits} />\r\n        </section>\r\n\r\n        <button\r\n          className=\"hidden 2xl:flex justify-center items-center mt-[97px] ml-[-89px] 2xl:mb-[218px] w-[213px] h-[50px] bg-[#384564] bg-opacity-[0.14] text-[] rounded-lg text-applayButton uppercase font-semibold \"\r\n          onClick={handleClick}\r\n        >\r\n          <FiChevronLeft />\r\n          <span className=\"text-text-accent opacity-[1] z-10\">\r\n            return to job board\r\n          </span>\r\n        </button>\r\n      </section>\r\n      <section className=\"max-w-{402} 2xl:ml-20\">\r\n        <h3 className=\"2xl:hidden text-logo font-bold tracking-0.413333px text-text-accent w-full mb-[9px]\">\r\n          Contact\r\n        </h3>\r\n        <div className=\"2xl:hidden w-full h-[1px] bg-text-accent opacity-[0.13] mix-blend-normal mb-[21px]\"></div>\r\n        <div className=\"relative w-[402px] h-[218px] bg-[#2A3047] overflow-hidden\">\r\n          <div className=\"grid gap-[8px] pt-[31px] pl-[62px] \">\r\n            <MapInfo text={name} isName={true} />\r\n            <MapInfo text={address} location={true} />\r\n            <MapInfo text={phone} />\r\n            <MapInfo text={email} />\r\n          </div>\r\n\r\n          <div className=\"w-[273px] h-[273px] rounded-[50%] absolute top-[-12px] left-[-77px] bg-[#202336]\"></div>\r\n        </div>\r\n        {isLoaded ? (\r\n          <Map lat={location.lat} long={location.long} />\r\n        ) : (\r\n          <h2>Loading</h2>\r\n        )}\r\n      </section>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default JobDetail;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch;\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n"],"names":["Container","children","className","IsFavorite","id","dispatch","useAppDispatch","toggleIsFavoriteState","e","toggleFavorite","FavoriteState","useAppSelector","state","isFavorite","find","item","fill","stroke","strokeWidth","onClick","PostedAt","date","createdAt","days","Date","parse","toString","Math","round","Applaybutton","email","href","IsFavoriteMobile","Header","width","shareList","document","querySelector","classList","remove","add","EmailShareButton","url","EmailIcon","size","FacebookShareButton","FacebookIcon","InstapaperShareButton","InstapaperIcon","LinkedinShareButton","LinkedinIcon","TelegramShareButton","TelegramIcon","TwitterShareButton","TwitterIcon","ViberShareButton","ViberIcon","WhatsappShareButton","WhatsappIcon","Description","title","salary","postedDate","description","String","fromCharCode","stringValue","convertedSalary","split","forEach","element","push","parseInt","join","getSalary","InfoItem","isBenefits","AdditInfo","employmentType","benefits","map","el","CurrentLocationMarker","position","icon","containerStyle","height","defaultOptions","styles","featureType","elementType","stylers","color","gamma","lightness","weight","saturation","visibility","panControl","zoomControl","mapTypeControl","scaleControl","rotateControl","fullscreenControl","scrollwheel","streetViewControl","Map","lat","long","mapRef","useRef","undefined","center","lng","onLoad","React","current","onUnmount","mapContainerStyle","zoom","options","contactInfoStyle","MapInfo","text","location","isName","AttImages","pictures","name","i","src","alt","isLoaded","useJsApiLoader","googleMapsApiKey","process","jobsList","jobs","jobBoardId","useParams","locationUrl","useLocation","navigate","useNavigate","jobItem","availableScreenWidth","window","screen","availWidth","employment_type","address","phone","from","useDispatch","useSelector"],"sourceRoot":""}