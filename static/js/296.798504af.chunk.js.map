{"version":3,"file":"static/js/296.798504af.chunk.js","mappings":"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","sources":["components/container.tsx","components/isFavorite.tsx","components/posted.tsx","redux/operation.ts","components/jobBoard/jobItem.tsx","components/jobBoard/jobList.tsx","pages/JobBoard.tsx","redux/hooks.ts"],"sourcesContent":["export const Container: React.FC<any> = ({ children }) => {\r\n  return (\r\n    <div className=\"container mx-auto 2xl:flex 2xl:justify-center \">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import { BsFillBookmarkFill } from \"react-icons/bs\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../redux/hooks\";\r\nimport { toggleFavorite } from \"../redux/jobFavoriteSlice\";\r\n\r\ninterface IProps {\r\n  id: string;\r\n}\r\n\r\nexport const IsFavorite: React.FC<IProps> = ({ id }) => {\r\n  const dispatch = useAppDispatch();\r\n  const isFavorite = useAppSelector((state) => state.isFavorite);\r\n\r\n  const toggleIsFavoriteState: React.MouseEventHandler<SVGElement> = (e) => {\r\n    dispatch(toggleFavorite(id));\r\n  };\r\n\r\n  const FavoriteState = isFavorite.find(\r\n    (item) => item.id === id && item.isFavorite === true\r\n  );\r\n\r\n  return FavoriteState?.isFavorite === true ? (\r\n    <BsFillBookmarkFill\r\n      fill=\"yellow\"\r\n      stroke=\"#70778B\"\r\n      strokeWidth=\"1px\"\r\n      onClick={toggleIsFavoriteState}\r\n    />\r\n  ) : (\r\n    <BsFillBookmarkFill\r\n      fill=\"white\"\r\n      stroke=\"#70778B\"\r\n      strokeWidth=\"1px\"\r\n      onClick={toggleIsFavoriteState}\r\n    />\r\n  );\r\n};\r\n","interface IProps {\r\n  createdAt: string;\r\n}\r\nexport const PostedAt: React.FC<IProps> = ({ createdAt }) => {\r\n  const date = createdAt;\r\n  const currentDate = Date.parse(new Date().toString());\r\n  const days = (currentDate - Date.parse(date)) / 86400000;\r\n\r\n  return (\r\n    <p className=\"2xl:font-postedAt font-light text-lg tracking-[-0.5625px] text-postedAt text-[14px] leading-[17px] mb-[7px]\">{`Posted ${Math.round(\r\n      days\r\n    )} days ago`}</p>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  fetchingInProgress,\r\n  fetchingSuccess,\r\n  fetchingError,\r\n} from \"./jobsSlice\";\r\nimport { initFavoriteState } from \"./jobFavoriteSlice\";\r\n\r\naxios.defaults.baseURL =\r\n  \"https://api.json-generator.com/templates/ZM1r0eic3XEy\";\r\n\r\nexport const fetchJobs = () => async (dispatch: any) => {\r\n  try {\r\n    dispatch(fetchingInProgress());\r\n    const response = await axios.get(\r\n      \"/data?access_token=wm3gg940gy0xek1ld98uaizhz83c6rh2sir9f9fu\"\r\n    );\r\n    dispatch(initFavoriteState(response.data));\r\n    console.log(response);\r\n\r\n    dispatch(fetchingSuccess(response.data));\r\n  } catch (error: any) {\r\n    dispatch(fetchingError(error.message));\r\n  }\r\n};\r\n","/* eslint-disable no-useless-concat */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Job } from \"../../redux/jobsSlice\";\r\nimport { IsFavorite } from \"../isFavorite\";\r\nimport { PostedAt } from \"../posted\";\r\nimport { ImLocation } from \"react-icons/im\";\r\nimport { FaStar } from \"react-icons/fa\";\r\n\r\ninterface IProps {\r\n  jobInfo: Job;\r\n}\r\n\r\nexport const JobItem: React.FC<IProps> = ({\r\n  jobInfo: { name, pictures, title, address, createdAt, id },\r\n}) => {\r\n  return (\r\n    <div className=\"flex gap-[19px] 2xl:gap-[26px] 2xl:grow\">\r\n      <img\r\n        className=\"2xl:w-[85px] 2xl:h-[85px] order-1 w-[66px] h-[66px] rounded-full mt-[45px] 2xl:mt-[24px]\"\r\n        src={pictures[0]}\r\n        alt={name}\r\n      />\r\n      <div className=\"flex w-[95%] flex-col  2xl:flex-row-reverse 2xl:justify-between order-2\">\r\n        <div className=\"flex gap-[32px] justify-between\">\r\n          <ul className=\"flex items-center \">\r\n            {window.screen.availWidth > 1920 ? (\r\n              <FaStar />\r\n            ) : (\r\n              <FaStar size={\"10px\"} />\r\n            )}\r\n            {window.screen.availWidth > 1920 ? (\r\n              <FaStar />\r\n            ) : (\r\n              <FaStar size={\"10px\"} />\r\n            )}\r\n\r\n            {window.screen.availWidth > 1920 ? (\r\n              <FaStar />\r\n            ) : (\r\n              <FaStar size={\"10px\"} />\r\n            )}\r\n\r\n            {window.screen.availWidth > 1920 ? (\r\n              <FaStar />\r\n            ) : (\r\n              <FaStar size={\"10px\"} />\r\n            )}\r\n\r\n            {window.screen.availWidth > 1920 ? (\r\n              <FaStar />\r\n            ) : (\r\n              <FaStar size={\"10px\"} />\r\n            )}\r\n          </ul>\r\n          <div className=\"grid content-between justify-items-end place-content-end\">\r\n            {window.screen.availWidth > 1920 && <IsFavorite id={id} />}\r\n\r\n            <PostedAt createdAt={createdAt} />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Link\r\n            className=\"2xl:text-salary text-lg 2xl:font-bold font-normal tracking-[-0.625px] text-text-accent order-1 grow-0 flex-none\"\r\n            to={{ pathname: `/job/${id}` }}\r\n          >\r\n            {title}\r\n          </Link>\r\n          <p className=\"text-p2 font-normal tracking-[0.23619px] text-[#878D9D] self-stretch order-2 grow-0 flex-none\">\r\n            {\"Department name\" +\r\n              \" \" +\r\n              String.fromCharCode(183) +\r\n              \" \" +\r\n              `${name}`}\r\n          </p>\r\n\r\n          <p className=\"flex items-center gap-2 text-p2 font-normal tracking-[0.23619px] text-[#878D9D]\">\r\n            <ImLocation /> {address}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { JobItem } from \"./jobItem\";\r\nimport { Job } from \"../../redux/jobsSlice\";\r\n\r\ninterface Iprops {\r\n  jobsList: Job[];\r\n}\r\n\r\nexport const JobList: React.FC<Iprops> = ({ jobsList }) => {\r\n  return (\r\n    <ul className=\"max-w-[1400px] grid gap-2 mx-auto\">\r\n      {jobsList.map((job) => {\r\n        return (\r\n          <li\r\n            key={job.id}\r\n            className=\"flex bg-white-accent drop-shadow 2xl:px-4 px-[8px] 2xl:py-6 py-[13px] place-content-between\"\r\n          >\r\n            <JobItem jobInfo={job} />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useAppSelector, useAppDispatch } from \"../redux/hooks\";\r\nimport { fetchJobs } from \"../redux/operation\";\r\nimport { JobList } from \"../components/jobBoard/jobList\";\r\nimport { Container } from \"../components/container\";\r\n\r\nconst JobBoard: React.FC = () => {\r\n  const { jobsList, isLoading, error } = useAppSelector((state) => state.jobs);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchJobs());\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <section className=\"2xl:pt-[29px] px-[9px] pt-[9px] pb-[17px] mx-auto max-w-[1400px] bg-[#F5F5F5] \">\r\n        {isLoading && <b>Loading jobs...</b>}\r\n        {error && <b>{error}</b>}\r\n        <JobList jobsList={jobsList} />\r\n      </section>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default JobBoard;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch;\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n"],"names":["Container","children","className","IsFavorite","id","dispatch","useAppDispatch","toggleIsFavoriteState","e","toggleFavorite","FavoriteState","useAppSelector","state","isFavorite","find","item","fill","stroke","strokeWidth","onClick","PostedAt","date","createdAt","days","Date","parse","toString","Math","round","axios","JobItem","jobInfo","name","pictures","title","address","src","alt","window","screen","availWidth","size","to","pathname","String","fromCharCode","JobList","jobsList","map","job","jobs","isLoading","error","useEffect","fetchingInProgress","response","initFavoriteState","data","console","log","fetchingSuccess","fetchingError","message","useDispatch","useSelector"],"sourceRoot":""}